import t from"tiny-emitter";import i from"virtual-scroll";class o extends t{constructor({lerp:t=.1,smooth:o=!0,direction:s="vertical"}={}){var l,e,r;super(),this.onResize=t=>{const i=t[0];if(i){const t=i.contentRect;this.limit="horizontal"===this.direction?t.width-this.windowWidth:t.height-this.windowHeight}},this.onWindowResize=()=>{this.windowHeight=window.innerHeight,this.windowWidth=window.innerWidth},this.onVirtualScroll=({deltaY:t,originalEvent:i})=>{this.stopped?i.preventDefault():(this.smooth&&!i.ctrlKey&&i.preventDefault(),this.targetScroll-=t,this.targetScroll=Math.max(0,Math.min(this.targetScroll,this.limit)))},this.onScroll=t=>{if(!(this.stopped||this.scrolling&&this.smooth)){const t=this.scroll;this.targetScroll=this.scroll="horizontal"===this.direction?window.scrollX:window.scrollY,this.velocity=this.scroll-t,this.notify()}},this.lerp=t,this.smooth=o,this.direction=s,window.addEventListener("scroll",this.onScroll,!1),window.addEventListener("resize",this.onWindowResize,!1);const h=(null==(l=navigator)||null==(e=l.userAgentData)?void 0:e.platform)||(null==(r=navigator)?void 0:r.platform)||"unknown";this.virtualScroll=new i({firefoxMultiplier:50,mouseMultiplier:h.indexOf("Win")>-1?1:.4,useKeyboard:!1,useTouch:!1,passive:!1}),this.virtualScroll.on(this.onVirtualScroll),this.onWindowResize(),this.limit="horizontal"===this.direction?document.body.offsetWidth-this.windowWidth:document.body.offsetHeight-this.windowHeight,this.resizeObserver=new ResizeObserver(this.onResize),this.resizeObserver.observe(document.body),this.targetScroll=this.scroll="horizontal"===this.direction?window.scrollX:window.scrollY,this.velocity=0}start(){this.stopped=!1}stop(){this.stopped=!0}destroy(){window.removeEventListener("scroll",this.onScroll,!1),window.removeEventListener("resize",this.onWindowResize,!1),this.virtualScroll.destroy(),this.resizeObserver.disconnect()}raf(){if(this.stopped||!this.smooth)return;let t=this.scroll;var i;this.scroll=(1-(i=this.lerp))*this.scroll+i*this.targetScroll,Math.round(this.scroll)===Math.round(this.targetScroll)&&(this.scroll=t=this.targetScroll),this.velocity=this.scroll-t,this.scrolling&&("horizontal"===this.direction?window.scrollTo(this.scroll,0):window.scrollTo(0,this.scroll),this.notify()),this.scrolling=this.scroll!==this.targetScroll}notify(){this.emit("scroll",{scroll:this.scroll,limit:this.limit,velocity:this.velocity,direction:this.direction})}scrollTo(t,{offset:i=0,immediate:o=!1}={}){let s;if("number"==typeof t)s=t;else if("top"===t)s=0;else if("bottom"===t)s=this.limit;else{let i;if("string"==typeof t)i=document.querySelector(t);else{if(null==t||!t.nodeType)return;i=t}if(!t)return;const o=i.getBoundingClientRect();s=("horizontal"===this.direction?o.left:o.top)+this.scroll}s+=i,this.targetScroll=s,this.scrolling=!0,this.smooth&&!o||(this.scroll=s,"horizontal"===this.direction?window.scrollTo(this.scroll,0):window.scrollTo(0,this.scroll))}}export{o as default};
//# sourceMappingURL=lenis.modern.js.map
