{"version":3,"file":"lenis.modern.mjs","sources":["../src/maths.js","../src/lenis.js"],"sourcesContent":["export function clamp(min, input, max) {\n  return Math.max(min, Math.min(input, max))\n}\n\nexport function mapRange(in_min, in_max, input, out_min, out_max) {\n  return ((input - in_min) * (out_max - out_min)) / (in_max - in_min) + out_min\n}\n\nexport function lerp(start, end, amt) {\n  return (1 - amt) * start + amt * end\n}\n\nexport function truncate(value, decimals) {\n  return parseFloat(value.toFixed(decimals))\n}\n\nexport function modulo(value, max) {\n  let v = value % max\n  if (v < 0) {\n    v += max\n  }\n\n  return v\n}\n","import { TinyEmitter as EventEmitter } from 'tiny-emitter'\nimport VirtualScroll from 'virtual-scroll'\nimport { version } from '../package.json'\nimport { clamp, modulo } from './maths'\n\nclass Animate {\n  to(target, { duration = 1, easing = (t) => t, ...keys } = {}) {\n    this.target = target\n    this.fromKeys = { ...keys }\n    this.toKeys = { ...keys }\n    this.keys = Object.keys({ ...keys })\n\n    // get initial values\n    this.keys.forEach((key) => {\n      this.fromKeys[key] = target[key]\n    })\n\n    this.duration = duration\n    this.easing = easing\n    this.currentTime = 0\n    this.isRunning = true\n  }\n\n  stop() {\n    this.isRunning = false\n  }\n\n  raf(deltaTime) {\n    if (!this.isRunning) return\n\n    this.currentTime = Math.min(this.currentTime + deltaTime, this.duration)\n\n    const progress = this.easing(this.progress)\n\n    this.keys.forEach((key) => {\n      const from = this.fromKeys[key]\n      const to = this.toKeys[key]\n\n      const value = from + (to - from) * progress\n\n      this.target[key] = value\n    })\n\n    if (progress === 1) {\n      this.stop()\n    }\n  }\n\n  get progress() {\n    return this.currentTime / this.duration\n  }\n}\n\nexport default class Lenis extends EventEmitter {\n  /**\n   * @typedef {(t: number) => number} EasingFunction\n   * @typedef {'vertical' | 'horizontal'} Direction\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureDirection\n   *\n   * @typedef LenisOptions\n   * @property {number} [duration]\n   * @property {EasingFunction} [easing]\n   * @property {boolean} [smooth]\n   * @property {number} [mouseMultiplier]\n   * @property {boolean} [smoothTouch]\n   * @property {number} [touchMultiplier]\n   * @property {Direction} [direction]\n   * @property {GestureDirection} [gestureDirection]\n   * @property {boolean} [infinite]\n   * @property {Window | HTMLElement} [wrapper]\n   * @property {HTMLElement} [content]\n   *\n   * @param {LenisOptions}\n   */\n  constructor({\n    duration = 1.2,\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // https://www.desmos.com/calculator/k2tgx2kn8t\n    smooth = true,\n    mouseMultiplier = 1,\n    smoothTouch = false,\n    touchMultiplier = 2,\n    direction = 'vertical', // vertical, horizontal\n    gestureDirection = 'vertical', // vertical, horizontal, both\n    infinite = false,\n    wrapper = window,\n    content = document.body,\n  } = {}) {\n    super()\n\n    window.lenisVersion = version\n\n    this.options = {\n      duration,\n      easing,\n      smooth,\n      mouseMultiplier,\n      smoothTouch,\n      touchMultiplier,\n      direction,\n      gestureDirection,\n      infinite,\n      wrapper,\n      content,\n    }\n\n    this.duration = duration\n    this.easing = easing\n    this.smooth = smooth\n    this.mouseMultiplier = mouseMultiplier\n    this.smoothTouch = smoothTouch\n    this.touchMultiplier = touchMultiplier\n    this.direction = direction\n    this.gestureDirection = gestureDirection\n    this.infinite = infinite\n    this.wrapperNode = wrapper\n    this.contentNode = content\n\n    this.wrapperNode.addEventListener('scroll', this.onScroll)\n\n    //observe wrapper node size\n    if (this.wrapperNode === window) {\n      this.wrapperNode.addEventListener('resize', this.onWindowResize)\n      this.onWindowResize()\n    } else {\n      this.wrapperHeight = this.wrapperNode.offsetHeight\n      this.wrapperWidth = this.wrapperNode.offsetWidth\n\n      //observe wrapper node size\n      this.wrapperObserver = new ResizeObserver(this.onWrapperResize)\n      this.wrapperObserver.observe(this.wrapperNode)\n    }\n\n    this.contentHeight = this.contentNode.offsetHeight\n    this.contentWidth = this.contentNode.offsetWidth\n\n    //observe content node size\n    this.contentObserver = new ResizeObserver(this.onContentResize)\n    this.contentObserver.observe(this.contentNode)\n\n    //set initial scroll position\n    this.targetScroll =\n      this.scroll =\n      this.lastScroll =\n        this.wrapperNode[this.scrollProperty]\n\n    this.animate = new Animate()\n\n    const platform =\n      navigator?.userAgentData?.platform || navigator?.platform || 'unknown'\n\n    // listen and normalize wheel event cross-browser\n    this.virtualScroll = new VirtualScroll({\n      el: this.wrapperNode,\n      firefoxMultiplier: 50,\n      mouseMultiplier:\n        this.mouseMultiplier * (platform.includes('Win') ? 0.84 : 0.4),\n      touchMultiplier: this.touchMultiplier,\n      passive: false,\n      useKeyboard: false,\n      useTouch: true,\n    })\n\n    this.virtualScroll.on(this.onVirtualScroll)\n  }\n\n  get scrollProperty() {\n    let property\n    if (this.wrapperNode === window) {\n      property = this.direction === 'horizontal' ? 'scrollX' : 'scrollY'\n    } else {\n      property = this.direction === 'horizontal' ? 'scrollLeft' : 'scrollTop'\n    }\n    return property\n  }\n\n  start() {\n    this.stopped = false\n  }\n\n  stop() {\n    this.stopped = true\n    this.animate.stop()\n  }\n\n  destroy() {\n    if (this.wrapperNode === window) {\n      this.wrapperNode.removeEventListener('resize', this.onWindowResize)\n    }\n    this.wrapperNode.removeEventListener('scroll', this.onScroll)\n\n    this.virtualScroll.destroy()\n    this.wrapperObserver?.disconnect()\n    this.contentObserver.disconnect()\n  }\n\n  onWindowResize = () => {\n    this.wrapperWidth = window.innerWidth\n    this.wrapperHeight = window.innerHeight\n  }\n\n  onWrapperResize = ([entry]) => {\n    if (entry) {\n      const rect = entry.contentRect\n      this.wrapperWidth = rect.width\n      this.wrapperHeight = rect.height\n    }\n  }\n\n  onContentResize = ([entry]) => {\n    if (entry) {\n      const rect = entry.contentRect\n      this.contentWidth = rect.width\n      this.contentHeight = rect.height\n    }\n  }\n\n  get limit() {\n    return this.direction === 'horizontal'\n      ? this.contentWidth - this.wrapperWidth\n      : this.contentHeight - this.wrapperHeight\n  }\n\n  onVirtualScroll = ({ deltaY, deltaX, originalEvent: e }) => {\n    const preventScroll = !!e\n      .composedPath()\n      .find(\n        (node) => node.hasAttribute && node.hasAttribute('data-lenis-prevent')\n      )\n\n    if (e.ctrlKey || preventScroll) return\n\n    // switch to smooth if event is touch and if smoothTouch=true\n    this.smooth = !!e.changedTouches ? this.smoothTouch : this.options.smooth\n\n    if (this.stopped) {\n      e.preventDefault()\n      return\n    }\n\n    if (!this.smooth) return\n\n    // fix wheel holding scroll https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n    if (e.buttons === 4) return\n\n    // prevent native wheel scrolling\n    if (this.smooth) e.preventDefault()\n\n    let delta = 0\n    if (this.gestureDirection === 'both') {\n      delta = deltaX + deltaY\n    } else if (this.gestureDirection === 'horizontal') {\n      delta = deltaX\n    } else {\n      // vertical\n      delta = deltaY\n    }\n\n    this.targetScroll -= delta\n    // this.targetScroll = clamp(0, this.targetScroll, this.limit)\n\n    this.scrollTo(this.targetScroll)\n  }\n\n  raf(now) {\n    const deltaTime = now - (this.now || 0)\n    this.now = now\n\n    if (this.stopped || !this.smooth) return\n\n    this.lastScroll = this.scroll\n\n    // where this.scroll is updated\n    this.animate.raf(deltaTime * 0.001)\n\n    if (this.scroll === this.targetScroll) {\n      // if target reached velocity should be 0\n      this.lastScroll = this.scroll\n    }\n\n    if (this.isScrolling) {\n      this.setScroll(this.scroll)\n      this.notify()\n    }\n\n    this.isScrolling = this.scroll !== this.targetScroll\n  }\n\n  get velocity() {\n    return this.scroll - this.lastScroll\n  }\n\n  setScroll(value) {\n    let scroll = this.infinite ? modulo(value, this.limit) : value\n\n    this.direction === 'horizontal'\n      ? this.wrapperNode.scrollTo(scroll, 0)\n      : this.wrapperNode.scrollTo(0, scroll)\n  }\n\n  onScroll = (e) => {\n    // if isScrolling false we can consider user isn't scrolling with wheel (cmd+F, keyboard or whatever). So we must scroll to value immediately\n    if (!this.isScrolling || !this.smooth) {\n      // where native scroll happens\n      this.targetScroll =\n        this.scroll =\n        this.lastScroll =\n          this.wrapperNode[this.scrollProperty]\n\n      this.notify()\n    }\n  }\n\n  notify() {\n    let scroll = this.infinite ? modulo(this.scroll, this.limit) : this.scroll\n\n    this.scrollDirection =\n      this.lastScroll === scroll\n        ? this.scrollDirection\n        : this.lastScroll < scroll\n        ? 1\n        : -1\n\n    this.emit('scroll', {\n      scroll,\n      limit: this.limit,\n      velocity: this.velocity,\n      direction: this.scrollDirection,\n      progress: scroll / this.limit,\n    })\n  }\n\n  scrollTo(\n    target,\n    {\n      offset = 0,\n      immediate = false,\n      duration = this.duration,\n      easing = this.easing,\n    } = {}\n  ) {\n    if (target === undefined || target === null) return\n    let value\n\n    if (typeof target === 'number') {\n      value = target\n    } else if (target === 'top' || target === '#top') {\n      value = 0\n    } else if (target === 'bottom') {\n      value = this.limit\n    } else {\n      let node\n\n      if (typeof target === 'string') {\n        // CSS selector\n        node = document.querySelector(target)\n      } else if (target?.nodeType) {\n        // Node element\n        node = target\n      } else {\n        return\n      }\n\n      if (!node) return\n      let wrapperOffset = 0\n\n      if (this.wrapperNode !== window) {\n        const wrapperRect = this.wrapperNode.getBoundingClientRect()\n        wrapperOffset =\n          this.direction === 'horizontal' ? wrapperRect.left : wrapperRect.top\n      }\n\n      const rect = node.getBoundingClientRect()\n\n      value =\n        (this.direction === 'horizontal' ? rect.left : rect.top) +\n        this.scroll -\n        wrapperOffset\n    }\n\n    value += offset\n\n    if (this.infinite) {\n      this.targetScroll = value\n    } else {\n      this.targetScroll = clamp(0, value, this.limit)\n    }\n\n    if (!this.smooth || immediate) {\n      this.animate.stop()\n      this.scroll = this.lastScroll = this.targetScroll\n      this.setScroll(this.targetScroll)\n    } else {\n      this.animate.to(this, {\n        duration,\n        easing,\n        scroll: this.targetScroll,\n      })\n    }\n  }\n}\n"],"names":["modulo","value","max","v","to","target","_ref","duration","easing","t","keys","_objectWithoutPropertiesLoose","_excluded","this","fromKeys","_extends","toKeys","Object","forEach","key","currentTime","isRunning","stop","raf","deltaTime","Math","min","progress","from","Lenis","EventEmitter","constructor","pow","smooth","mouseMultiplier","smoothTouch","touchMultiplier","direction","gestureDirection","infinite","wrapper","window","content","document","body","_navigator","_navigator$userAgentD","_navigator2","super","onWindowResize","wrapperWidth","innerWidth","wrapperHeight","innerHeight","onWrapperResize","entry","rect","contentRect","width","height","onContentResize","contentWidth","contentHeight","onVirtualScroll","deltaY","deltaX","originalEvent","e","preventScroll","composedPath","find","node","hasAttribute","ctrlKey","changedTouches","options","stopped","preventDefault","buttons","delta","targetScroll","scrollTo","onScroll","isScrolling","scroll","lastScroll","wrapperNode","scrollProperty","notify","lenisVersion","contentNode","addEventListener","offsetHeight","offsetWidth","wrapperObserver","ResizeObserver","observe","contentObserver","animate","navigator","userAgentData","platform","virtualScroll","el","firefoxMultiplier","includes","passive","useKeyboard","useTouch","on","property","start","destroy","_this$wrapperObserver","removeEventListener","disconnect","limit","now","setScroll","velocity","scrollDirection","emit","offset","immediate","querySelector","nodeType","wrapperOffset","wrapperRect","getBoundingClientRect","left","top"],"mappings":"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"}